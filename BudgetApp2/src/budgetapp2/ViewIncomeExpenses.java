/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package budgetapp2;

import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import java.sql.*;
import java.util.ArrayList;
/**
 *
 * @author TamTam
 */
public class ViewIncomeExpenses extends javax.swing.JFrame {

    /**
     * Creates new form ViewIncomeExpenses
     */
    public ViewIncomeExpenses() {
        initComponents();
        
        /*try {
            //Connection conn = null;
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/Budget", "test", "test");
            String url = "jdbc:derby://localhost:1527/";  
            String dbName = "Budget";
            String driver = "org.apache.derby.jdbc.ClientDriver";
            String userName = "test";
            String password = "test";
            
            Statement myStmt = conn.createStatement();
            ResultSet myResult = myStmt.executeQuery("SELECT * FROM INCOME");

            int total = 0;
            
            while (myResult.next()) {
                total = total + (myResult.getInt("INC_AMOUNT"));
            }
            
            sumIncomeLbl.setText(Integer.toString(total));
            
            
        }catch (Exception e) {
            e.printStackTrace();
        }
        */
        sumExpensesLbl.setText(getExpenses());
        sumIncomeLbl.setText(getIncome());
        
    }
    
    private String getExpenses() {
        int total2 = 0;
        try {
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/Budget", "test", "test");
            String url = "jdbc:derby://localhost:1527/";  
            String dbName = "Budget";
            String driver = "org.apache.derby.jdbc.ClientDriver";
            String userName = "test";
            String password = "test";
            
            Statement myStmt2 = conn.createStatement();
            ResultSet myResult2 = myStmt2.executeQuery("SELECT * FROM EXPENDITURE");

            
            
            while (myResult2.next()) {
                //sum.add(myResult.getInt("INC_AMOUNT")); 
                total2 = total2 + (myResult2.getInt("EXP_AMOUNT"));
            }

        }catch (Exception e) {
            e.printStackTrace();
        }
        
        return Integer.toString(total2);
    }
    
    private String getIncome() {
        int total = 0;
        try {
            //Connection conn = null;
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/Budget", "test", "test");
            String url = "jdbc:derby://localhost:1527/";  
            String dbName = "Budget";
            String driver = "org.apache.derby.jdbc.ClientDriver";
            String userName = "test";
            String password = "test";
            
            Statement myStmt = conn.createStatement();
            ResultSet myResult = myStmt.executeQuery("SELECT * FROM INCOME");

            while (myResult.next()) {
                total = total + (myResult.getInt("INC_AMOUNT"));
            }

        }catch (Exception e) {
            e.printStackTrace();
        }
        
        return Integer.toString(total);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        BudgetApp2PUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("BudgetApp2PU").createEntityManager();
        incomeQuery = java.beans.Beans.isDesignTime() ? null : BudgetApp2PUEntityManager.createQuery("SELECT i FROM Income i");
        incomeList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : incomeQuery.getResultList();
        expenditureQuery = java.beans.Beans.isDesignTime() ? null : BudgetApp2PUEntityManager.createQuery("SELECT e FROM Expenditure e");
        expenditureList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : expenditureQuery.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        incomeTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        expensesTable = new javax.swing.JTable();
        totalIncomeLbl1 = new javax.swing.JLabel();
        sumIncomeLbl = new javax.swing.JLabel();
        totalExpensesLbl = new javax.swing.JLabel();
        sumExpensesLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, incomeList, incomeTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${incCategory}"));
        columnBinding.setColumnName("Inc Category");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${incAmount}"));
        columnBinding.setColumnName("Inc Amount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${incDate}"));
        columnBinding.setColumnName("Inc Date");
        columnBinding.setColumnClass(java.util.Date.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(incomeTable);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, expenditureList, expensesTable);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${expCategory}"));
        columnBinding.setColumnName("Exp Category");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${expAmount}"));
        columnBinding.setColumnName("Exp Amount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${expDate}"));
        columnBinding.setColumnName("Exp Date");
        columnBinding.setColumnClass(java.util.Date.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        jScrollPane2.setViewportView(expensesTable);

        totalIncomeLbl1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalIncomeLbl1.setText("TOTAL INCOME");

        sumIncomeLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sumIncomeLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        totalExpensesLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalExpensesLbl.setText("TOTAL EXPENSES");

        sumExpensesLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sumExpensesLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(totalIncomeLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sumIncomeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(totalExpensesLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sumExpensesLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(totalIncomeLbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sumIncomeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(totalExpensesLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sumExpensesLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewIncomeExpenses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewIncomeExpenses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewIncomeExpenses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewIncomeExpenses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewIncomeExpenses().setVisible(true);
                
            }
        });
        
    /**
     *
     * @return
     */
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager BudgetApp2PUEntityManager;
    private java.util.List<budgetapp2.Expenditure> expenditureList;
    private javax.persistence.Query expenditureQuery;
    private javax.swing.JTable expensesTable;
    private java.util.List<budgetapp2.Income> incomeList;
    private javax.persistence.Query incomeQuery;
    private javax.swing.JTable incomeTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel sumExpensesLbl;
    private javax.swing.JLabel sumIncomeLbl;
    private javax.swing.JLabel totalExpensesLbl;
    private javax.swing.JLabel totalIncomeLbl1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
